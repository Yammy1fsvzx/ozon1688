import asyncio
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.types import FSInputFile
from src.core.database import Database
from src.utils.logger import logger
from src.bot.keyboards import get_reprocess_keyboard, get_main_keyboard
from src.utils.excel_generator import ExcelGenerator
import os

class TelegramBot:
    def __init__(self, token: str):
        self.bot = Bot(token=token)
        self.dp = Dispatcher()
        self.db = Database()
        self.excel_generator = ExcelGenerator()
        self.last_report_request = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—á–µ—Ç–∞
        self.last_stats_request = {}   # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.last_help_request = {}    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏
        self.last_active_request = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.dp.message.register(self.start_command, Command("start"))
        self.dp.message.register(self.handle_url, lambda msg: not msg.text.startswith('/'))
        self.dp.callback_query.register(self.handle_callback, lambda c: c.data.startswith('reprocess:'))
        self.dp.callback_query.register(self.handle_action_callback, lambda c: c.data.startswith('action:'))
    
    async def start_command(self, message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
        """
        welcome_text = (
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ Ozon –∏ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n\n"
            "üéØ –ß—Ç–æ —è —É–º–µ—é:\n"
            "‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å Ozon\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n"
            "‚Ä¢ –†–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤\n"
            "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –≤ Excel\n"
            "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n"
            "üìù –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
            "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Ozon\n"
            "2. –Ø –¥–æ–±–∞–≤–ª—é –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É\n"
            "3. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–∞—Ö\n\n"
            "üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:"
        )
        await message.answer(welcome_text, reply_markup=get_main_keyboard())

    async def handle_action_callback(self, callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        """
        _, action = callback.data.split(':')
        
        if action == 'report':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—á–µ—Ç–∞
            user_id = callback.from_user.id
            current_time = asyncio.get_event_loop().time()
            
            if user_id in self.last_report_request:
                time_since_last_request = current_time - self.last_report_request[user_id]
                if time_since_last_request < 3:  # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 3 —Å–µ–∫—É–Ω–¥
                    await callback.answer("‚è≥ –û—Ç—á–µ—Ç —É–∂–µ –±—ã–ª –∑–∞–ø—Ä–æ—à–µ–Ω! –ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥—ã.", show_alert=True)
                    return
            
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                self.last_report_request[user_id] = current_time
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞
                status_message = await callback.message.edit_text("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç—á–µ—Ç –ø–æ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏...")
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
                filename = self.excel_generator.generate_profitability_report()
                
                if filename and os.path.exists(filename):
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
                    input_file = FSInputFile(filename)
                    await callback.message.answer_document(
                        document=input_file,
                        caption="üìä –û—Ç—á–µ—Ç –ø–æ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ –≥–æ—Ç–æ–≤!\n\n"
                                "–í –æ—Ç—á–µ—Ç–µ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n"
                                "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ Ozon\n"
                                "‚Ä¢ –¶–µ–Ω–∞ –Ω–∞ Ozon\n"
                                "‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ 1688\n"
                                "‚Ä¢ –¶–µ–Ω–∞ –Ω–∞ 1688\n"
                                "‚Ä¢ –ü—Ä–∏–±—ã–ª—å\n"
                                "‚Ä¢ –ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏\n"
                                "‚Ä¢ –í–µ—Å –∏ —Ä–∞–∑–º–µ—Ä—ã\n"
                                "‚Ä¢ –î–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
                    )
                    
                    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                    os.remove(filename)
                    
                    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
                    await callback.message.edit_text(
                        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ Ozon –∏ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n\n"
                        "üéØ –ß—Ç–æ —è —É–º–µ—é:\n"
                        "‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å Ozon\n"
                        "‚Ä¢ –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n"
                        "‚Ä¢ –†–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤\n"
                        "‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–æ–≤ –≤ Excel\n"
                        "‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏\n\n"
                        "üìù –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
                        "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Ozon\n"
                        "2. –Ø –¥–æ–±–∞–≤–ª—é –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É\n"
                        "3. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–∞—Ö\n\n"
                        "‚ÑπÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã —Å—Å—ã–ª–æ–∫:\n"
                        "‚Ä¢ https://www.ozon.ru/product/...\n"
                        "‚Ä¢ https://ozon.ru/t/...\n\n"
                        "üîç –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
                        reply_markup=get_main_keyboard()
                    )
                else:
                    await status_message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {str(e)}")
                await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                
        elif action == 'help':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–º–æ—â–∏
            user_id = callback.from_user.id
            current_time = asyncio.get_event_loop().time()
            
            if user_id in self.last_help_request:
                time_since_last_request = current_time - self.last_help_request[user_id]
                if time_since_last_request < 3:  # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 3 —Å–µ–∫—É–Ω–¥
                    await callback.answer("‚è≥ –°–ø—Ä–∞–≤–∫–∞ —É–∂–µ –±—ã–ª–∞ –∑–∞–ø—Ä–æ—à–µ–Ω–∞! –ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥—ã.", show_alert=True)
                    return
            
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                self.last_help_request[user_id] = current_time
                
                help_text = (
                    "ü§ñ –Ø –±–æ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–≤–∞—Ä–æ–≤ Ozon –∏ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n\n"
                    "üìù –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n"
                    "1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å Ozon\n"
                    "2. –Ø –¥–æ–±–∞–≤–ª—é –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É\n"
                    "3. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–∞—Ö\n\n"
                    "üìä –§—É–Ω–∫—Ü–∏–∏:\n"
                    "‚Ä¢ –ü–∞—Ä—Å–∏–Ω–≥ —Ç–æ–≤–∞—Ä–æ–≤ —Å Ozon\n"
                    "‚Ä¢ –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–∞ 1688.com\n"
                    "‚Ä¢ –†–∞—Å—á–µ—Ç –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏\n"
                    "‚Ä¢ –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –≤ Excel\n\n"
                )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if callback.message.text != help_text:
                    try:
                        await callback.message.edit_text(help_text, reply_markup=get_main_keyboard())
                    except Exception as e:
                        if "message is not modified" in str(e):
                            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                            await callback.answer("–°–ø—Ä–∞–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
                        else:
                            # –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –ª–æ–≥–∏—Ä—É–µ–º –µ—ë
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–∫–∏: {str(e)}")
                else:
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    await callback.answer("–°–ø—Ä–∞–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ —Å–ø—Ä–∞–≤–∫–∏: {str(e)}")
                await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        elif action == 'stats':
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                stats = self.db.get_tasks_statistics()
                
                if not stats:
                    await callback.message.edit_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                    return
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                stats_text = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–¥–∞—á–∞–º:\n\n"
                
                # –û–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                stats_text += f"üì¶ –í—Å–µ–≥–æ –∑–∞–¥–∞—á: {stats['total_tasks']}\n"
                stats_text += f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {stats['completed_products']}\n"
                stats_text += f"üí∞ –°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {stats['avg_profitability']}%\n\n"
                
                # –°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á
                stats_text += "üìã –°—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á:\n"
                status_emojis = {
                    'pending': '‚è≥',
                    'ozon_processed': 'üîÑ',
                    'completed': '‚úÖ',
                    'error': '‚ùå',
                    'fatal': 'üí•',
                    'not_found': 'üîç',
                    'failed': '‚ö†Ô∏è'
                }
                
                for status, count in stats['status_counts'].items():
                    if count > 0:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–Ω—É–ª–µ–≤—ã–µ —Å—Ç–∞—Ç—É—Å—ã
                        emoji = status_emojis.get(status, '‚Ä¢')
                        stats_text += f"{emoji} {status}: {count}\n"
                
                # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–æ–≤–∞—Ä—ã
                if stats['last_products']:
                    stats_text += "\nüÜï –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:\n"
                    for product in stats['last_products']:
                        stats_text += f"‚Ä¢ <a href='{product['ozon_url']}'>{product['name']}</a>\n"
                        stats_text += f"  <a href='{product['alibaba_url']}'>1688</a> | "
                        stats_text += f"–ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {product['profitability']}%\n"
                        stats_text += f"  –î–æ–±–∞–≤–ª–µ–Ω: {product['created_at']}\n\n"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if callback.message.text != stats_text:
                    try:
                        await callback.message.edit_text(stats_text, reply_markup=get_main_keyboard(), parse_mode='HTML')
                    except Exception as e:
                        if "message is not modified" in str(e):
                            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                            await callback.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
                        else:
                            # –ï—Å–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞, –ª–æ–≥–∏—Ä—É–µ–º –µ—ë
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
                else:
                    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback
                    await callback.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞")
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
                await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        elif action == 'active':
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á
            user_id = callback.from_user.id
            current_time = asyncio.get_event_loop().time()
            
            if user_id in self.last_active_request:
                time_since_last_request = current_time - self.last_active_request[user_id]
                if time_since_last_request < 3:  # –ï—Å–ª–∏ –ø—Ä–æ—à–ª–æ –º–µ–Ω–µ–µ 3 —Å–µ–∫—É–Ω–¥
                    await callback.answer("‚è≥ –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á —É–∂–µ –±—ã–ª –∑–∞–ø—Ä–æ—à–µ–Ω! –ü–æ–¥–æ–∂–¥–∏—Ç–µ 3 —Å–µ–∫—É–Ω–¥—ã.", show_alert=True)
                    return
            
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
                self.last_active_request[user_id] = current_time
                
                # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
                active_tasks = self.db.get_active_tasks()[:5]
                
                if not active_tasks:
                    active_text = "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:\n\n–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –∑–∞–¥–∞—á –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ."
                else:
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
                    active_text = "üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5):\n\n"
                    
                    for task in active_tasks:
                        status_emoji = '‚è≥' if task['status'] == 'pending' else 'üîÑ'
                        status_text = '–æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏' if task['status'] == 'pending' else '–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ Ozon'
                        
                        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –Ω–∞–∑–≤–∞–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤
                        ozon_name = task['ozon_name'][:50] + '...' if task['ozon_name'] and len(task['ozon_name']) > 50 else task['ozon_name']
                        alibaba_name = task['alibaba_name'][:50] + '...' if task['alibaba_name'] and len(task['alibaba_name']) > 50 else task['alibaba_name']
                        
                        active_text += f"{status_emoji} –ó–∞–¥–∞—á–∞ #{task['task_id']}\n"
                        active_text += f"–°—Ç–∞—Ç—É—Å: {status_text}\n"
                        active_text += f"–î–æ–±–∞–≤–ª–µ–Ω–∞: {task['created_at']}\n"
                        
                        if task['ozon_name']:
                            active_text += f"Ozon: <a href='{task['ozon_url']}'>{ozon_name}</a>\n"
                        
                        if task['alibaba_name']:
                            active_text += f"1688: <a href='{task['alibaba_url']}'>{alibaba_name}</a>\n"
                        
                        active_text += "\n"
                    
                    # –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏, –¥–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    total_tasks = len(self.db.get_active_tasks())
                    if total_tasks > 5:
                        active_text += f"\nüìù –ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∏–∑ {total_tasks} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á"
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
                if len(active_text) > 4000:  # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    active_text = active_text[:3997] + "..."
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª–æ—Å—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
                if callback.message.text != active_text:
                    try:
                        await callback.message.edit_text(active_text, reply_markup=get_main_keyboard(), parse_mode='HTML')
                    except Exception as e:
                        if "message is not modified" in str(e):
                            await callback.answer("–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∞–∫—Ç—É–∞–ª–µ–Ω")
                        else:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {str(e)}")
                else:
                    await callback.answer("–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∞–∫—Ç—É–∞–ª–µ–Ω")
                    
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á: {str(e)}")
                await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        
        await callback.answer()
    
    async def handle_url(self, message: Message):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ URL-—Å–æ–æ–±—â–µ–Ω–∏–π
        """
        url = message.text.strip()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ Ozon –≤ –æ–¥–Ω–æ–º –∏–∑ –¥–≤—É—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
        if not (
            url.startswith('https://www.ozon.ru/product/') or 
            url.startswith('https://ozon.ru/t/')
        ):
            await message.answer(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä Ozon.\n"
                "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã:\n"
                "1. https://www.ozon.ru/product/...\n"
                "2. https://ozon.ru/t/..."
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ URL –≤ –±–∞–∑–µ
        if self.db.is_url_exists(url):
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
            task_status = self.db.get_task_status_by_url(url)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ
            product_info = self.db.get_product_info_by_url(url)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
            status_emoji = {
                'pending': '‚è≥',
                'ozon_processed': 'üîÑ',
                'completed': '‚úÖ',
                'error': '‚ùå',
                'fatal': 'üí•',
                'not_found': 'üîç',
                'failed': '‚ö†Ô∏è'
            }.get(task_status, '‚Ä¢')
            
            status_text = {
                'pending': '–æ–∂–∏–¥–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                'ozon_processed': '–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ Ozon',
                'completed': '–æ–±—Ä–∞–±–æ—Ç–∞–Ω',
                'error': '–æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                'fatal': '–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞',
                'not_found': '—Ç–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω',
                'failed': '–Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å'
            }.get(task_status, task_status)
            
            # –ë–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
            status_message = f"üì¶ –¢–æ–≤–∞—Ä —É–∂–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ!\n–°—Ç–∞—Ç—É—Å: {status_emoji} {status_text}\n\n"
            
            if product_info:
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
                status_message += f"üõçÔ∏è Ozon:\n"
                status_message += f"‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {product_info['ozon_name']}\n"
                status_message += f"‚Ä¢ –¶–µ–Ω–∞: {product_info['ozon_price']} ‚ÇΩ (${product_info['ozon_price_usd']})\n"
                status_message += f"‚Ä¢ –°—Å—ã–ª–∫–∞: {product_info['ozon_url']}\n\n"
                
                status_message += f"üè≠ 1688:\n"
                status_message += f"‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {product_info['alibaba_name']}\n"
                status_message += f"‚Ä¢ –¶–µ–Ω–∞: ${product_info['alibaba_price']}\n"
                status_message += f"‚Ä¢ –°—Å—ã–ª–∫–∞: {product_info['alibaba_url']}\n\n"
                
                status_message += f"üí∞ –ü—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç—å:\n"
                status_message += f"‚Ä¢ –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {product_info['profitability_percent']}%\n"
                status_message += f"‚Ä¢ –ü—Ä–∏–±—ã–ª—å: ${product_info['total_profit']}\n\n"
                
                if product_info['weight']:
                    status_message += f"üìè –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:\n"
                    status_message += f"‚Ä¢ –í–µ—Å: {product_info['weight']} –≥\n"
                    if product_info['dimensions']:
                        status_message += f"‚Ä¢ –†–∞–∑–º–µ—Ä—ã: {product_info['dimensions']}\n"
                    status_message += "\n"
                
                status_message += f"üìÖ –î–æ–±–∞–≤–ª–µ–Ω: {product_info['created_at']}\n\n"
            
            status_message += "–•–æ—Ç–∏—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —ç—Ç–æ–≥–æ —Ç–æ–≤–∞—Ä–∞?"
            
            # –ü–æ–ª—É—á–∞–µ–º ID —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–¥–∞—á–∏
            task_id = self.db.get_task_id_by_url(url)
            await message.answer(status_message, reply_markup=get_reprocess_keyboard(task_id))
            return
        
        try:
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É –≤ –±–∞–∑—É
            task_id = self.db.add_task(url)
            await message.answer("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ {task_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}")
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏: {str(e)}")
            await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    
    async def handle_callback(self, callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫
        """
        _, action, task_id = callback.data.split(':')
        task_id = int(task_id)
        
        if action == 'yes':
            try:
                # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–¥–∞—á–∏
                url = self.db.get_task_url(task_id)
                if not url:
                    await callback.message.edit_text("‚ùå –û—à–∏–±–∫–∞: URL –∑–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    return
                
                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
                new_task_id = self.db.add_task(url)
                await callback.message.edit_text("‚úÖ –ó–∞–¥–∞—á–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
                logger.info(f"üì• –ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∑–∞–¥–∞—á–∞ {new_task_id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–¥–∞—á–∏: {str(e)}")
                await callback.message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        else:
            await callback.message.edit_text("‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ")
        
        await callback.answer()
    
    async def start(self):
        """
        –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        """
        logger.info("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç")
        await self.dp.start_polling(self.bot)